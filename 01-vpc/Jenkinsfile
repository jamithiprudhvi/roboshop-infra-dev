pipeline {
    agent {
        node {
            label 'AGENT-1'
        }
    }

    options {
    timeout(time: 1, unit: 'HOURS') 
    disableConcurrentBuilds()
    ansiColor('xterm')

    parameters {
        choice(name: 'Action', choices: ['apply', 'destroy'], description: 'Pick something')
    }

}
    // Build
    stages {
        stage('Init') {
            steps {
                sh """
                    cd 01-vpc
                    terraform init -reconfigure
                """    
            }
        }
        stage('Plan') {
            steps {
                sh """
                    cd 01-vpc
                    terraform plan
                """
            }
        }
        // stage('Apply') {
        //     steps {
        //         sh """
        //             cd 01-vpc
        //             terraform destroy -auto-approve
        //         """
        //     }
        // }
        stage('Deploy') {
            when {
                    "${params.action}" == 'apply' 
            }
            input {
                message "Should we continue?"
                ok "Yes, we should."
                // submitter "alice,bob"
                // parameters {
                //     string(name: 'PERSON', defaultValue: 'Mr Jenkins', description: 'Who should I say hello to?')
                // }
            }
    }
    // post Build
    post { 
        always { 
            echo 'I will always say Hello again'
        }
        failure { 
            echo 'This runs when pipeline is failed, used generally to send some alerts'
        }
        success { 
            echo 'It will say hello when pipe line is success'
        }
    }
}